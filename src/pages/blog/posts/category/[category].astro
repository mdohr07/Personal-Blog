---
import type { GetStaticPaths } from 'astro';
import { slugify } from '../../../../js/helpers';
import { formatBlogPosts } from '../../../../js/sortPosts';
import Layout from '../../../../layouts/Layout.astro';
import PostCard from '../../../../components/PostCard.astro';

const { category } = Astro.params;
const { name } = Astro.props;

const allPosts = await Astro.glob("../../posts/*md");
const formattedPosts = formatBlogPosts(allPosts);
const catPosts = formattedPosts.filter(post => slugify(post.frontmatter.category) === category);

export const getStaticPaths: GetStaticPaths = async () => {
  const allPosts = await Astro.glob("../../posts/*md");
  const formattedPosts = formatBlogPosts(allPosts);
  const categories = Array.from(new Set(formattedPosts.map(post => post.frontmatter.category)));

  return categories.map(category => ({
    params: { category: slugify(category) },
    props: { name: category },
  }));
};
---

<Layout title={name} pageTitle="mdohr" description="Mein Web Development Blog">
  <h2>Entries by category {name}</h2>
  <section class="post-list" aria-label={`Einträge über ${name}`}>
    {catPosts.map(post => (
      <PostCard 
        frontmatter={post.frontmatter} 
        url={post.url} 
      />
    ))}
  </section>
</Layout>
